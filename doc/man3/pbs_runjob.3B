.\" Copyright (C) 1994-2018 Altair Engineering, Inc.
.\" For more information, contact Altair at www.altair.com.
.\"
.\" This file is part of the PBS Professional ("PBS Pro") software.
.\"
.\" Open Source License Information:
.\"
.\" PBS Pro is free software. You can redistribute it and/or modify it under the
.\" terms of the GNU Affero General Public License as published by the Free
.\" Software Foundation, either version 3 of the License, or (at your option) any
.\" later version.
.\"
.\" PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
.\" WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
.\" FOR A PARTICULAR PURPOSE.
.\" See the GNU Affero General Public License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Commercial License Information:
.\"
.\" For a copy of the commercial license terms and conditions,
.\" go to: (http://www.pbspro.com/UserArea/agreement.html)
.\" or contact the Altair Legal Department.
.\"
.\" Altair’s dual-license business model allows companies, individuals, and
.\" organizations to create proprietary derivative works of PBS Pro and
.\" distribute them - whether embedded or bundled with other software -
.\" under a commercial license agreement.
.\"
.\" Use of Altair’s trademarks, including but not limited to "PBS™",
.\" "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
.\" trademark licensing policies.
.\"
.TH pbs_runjob 3B "11 September 2013" Local "PBS Professional"
.SH NAME
pbs_runjob, pbs_asyrunjob - run a PBS batch job, asynchronous batch job
.SH SYNOPSIS
#include <pbs_error.h>
.br
#include <pbs_ifl.h>
.sp
.B int pbs_runjob(\^int\ connect, char\ *job_id, char\ *location, char\ *extend)
.sp
.B int pbs_asyrunjob(\^int\ connect, char\ *job_id, char\ *location, char\ *extend)

.SH DESCRIPTION
Issue a batch request to run a batch job.
.LP
For 
.I pbs_runjob()
a "Run Job"
batch request is generated and sent to the server over the connection
specified by
.I connect 
which is the return value of \f3pbs_connect\f1().
The server will reply when the job has started execution unless file
in-staging is required.  In that case, the server will reply when the
staging operations are started.
.LP
For 
.I pbs_asyrunjob()
an "Asynchronous Run Job"
request is generated and sent to the server over the connection.
The server will validate the request and reply before initiating the
execution of the job.   This version of the call can be used to reduce
latency in scheduling, especially when the scheduler must start a large
number of jobs.
.LP
These requests requires that the issuing user have operator or
administrator privilege.
.LP
The argument,
.I job_id ,
identifies which job is to be run it is specified in the form:
.RS 4
.I "sequence_number.server"
.RE
.LP
The argument,
.I location ,
if not the null pointer or null string, specifies the location where the 
job should be run, and optionally the resources to use.  The location 
is the same as the -H option to the qrun command.  See the 
description of qrun -H, both with and without resources specified, in 
the qrun.8B man page.
.LP
The argument,
.I extend ,
is reserved for implementation-defined extensions.
.SH "SEE ALSO"
qrun(8B), qsub(1B), and pbs_connect(3B)
.SH DIAGNOSTICS
When the batch request generated by the \f3pbs_runjob\f1()
or \f3pbs_asyrunjob\f1()
functions has been completed successfully by a batch server, the routines will
return 0 (zero).
Otherwise, a non zero error is returned.  The error number is also set
in pbs_errno.
