.\" Copyright (C) 1994-2018 Altair Engineering, Inc.
.\" For more information, contact Altair at www.altair.com.
.\"
.\" This file is part of the PBS Professional ("PBS Pro") software.
.\"
.\" Open Source License Information:
.\"
.\" PBS Pro is free software. You can redistribute it and/or modify it under the
.\" terms of the GNU Affero General Public License as published by the Free
.\" Software Foundation, either version 3 of the License, or (at your option) any
.\" later version.
.\"
.\" PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
.\" WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
.\" FOR A PARTICULAR PURPOSE.
.\" See the GNU Affero General Public License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Commercial License Information:
.\"
.\" For a copy of the commercial license terms and conditions,
.\" go to: (http://www.pbspro.com/UserArea/agreement.html)
.\" or contact the Altair Legal Department.
.\"
.\" Altair’s dual-license business model allows companies, individuals, and
.\" organizations to create proprietary derivative works of PBS Pro and
.\" distribute them - whether embedded or bundled with other software -
.\" under a commercial license agreement.
.\"
.\" Use of Altair’s trademarks, including but not limited to "PBS™",
.\" "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
.\" trademark licensing policies.
.\"
.TH pbs_statnode 3B "2 February 2016" Local "PBS Professional"
.SH NAME
.B pbs_statnode, pbs_statvnode, pbs_stathost
\- obtain status of PBS vnodes or hosts
.SH SYNOPSIS
#include <pbs_error.h>
.br
#include <pbs_ifl.h>
.sp
.B struct batch_status *pbs_stathost(\^int\ connect, char\ *id, struct\ attrl\ *attrib, char\ *extend)
.sp
.B struct batch_status *pbs_statnode(\^int\ connect, char\ *id, struct\ attrl\ *attrib, char\ *extend)
.sp
.B struct batch_status *pbs_statvnode(\^int\ connect, char\ *id, struct\ attrl\ *attrib, char\ *extend)
.sp
.B void pbs_statfree(\^struct batch_status *psj\^)

.SH DESCRIPTION
Issue a batch request to obtain the status of PBS execution hosts or vnodes.
.LP
pbs_stathost returns information about the single host named in the call or
about all hosts known to the PBS Server.
.LP
pbs_statnode is identical to pbs_stathost in function.   It is retained for
backward compatibility.
.LP
pbs_statvnode returns information about the single virtual node (vnode) named
in the call or about all vnodes  known to the PBS Server.
.LP
A
.I "Status Node"
batch request is generated and sent to the server over the connection
specified by
.I connect 
which is the return value of \f3pbs_connect\f1().
.LP
The 
.I id
is the name of a host for pbs_stathost, or a vnode for pbs_statvnode,
or the null string.  If 
.I id
specifies a name, the status of that host or vnode will be returned.  If the
.I id
is a null string (or null pointer), the status of all hosts or
vnodes at the server will be returned.
.LP
The parameter,
.I attrib ,
is a pointer to an
.I attrl 
structure which is defined in pbs_ifl.h as:
.sp
.Ty
.nf
    struct attrl {
        struct attrl *next;
        char         *name;
        char         *resource;
        char         *value;
    };
.fi
.sp
The
.I attrib
list is terminated by the first entry where
.I next
is a null pointer.  If 
.I attrib
is given, then only the attributes in the list are returned by the server.
Otherwise, all the attributes of a node are returned.
When an
.I attrib
list is specified, the
.I name
member is a pointer to an attribute name.
The
.I resource
member is not used and must be a pointer to a null string.
The
.I value
member should always be a pointer to a null string.
.LP
The parameter,
.I extend ,
is reserved for implementation-defined extensions.
.LP
The return value is a pointer to a list of
.I batch_status
structures, which is defined in pbs_ifl.h as:
.sp
.Ty
.nf
    struct batch_status {
        struct batch_status *next;
        char                *name;
        struct attrl        *attribs;
        char                *text;
    }
.fi
.LP
It is up the user to free the structure when no longer needed, by calling
\f3pbs_statfree\f1().
.LP

The vnode state value can be one or more comma-separated strings.
All vnode states are documented in the pbs_node_attributes.7B man page.

.SH DIAGNOSTICS
When the batch request generated by 
.B "pbs_stathost(), pbs_statnode(),"
or
.B pbs_statvnode()
function has been completed successfully by a batch server, the routine will
return a pointer to the batch_status structure.
Otherwise, a null pointer is returned and the error code
is set in the global integer pbs_errno.

.SH SEE ALSO
qstat(1B),
pbs_connect(3B)

