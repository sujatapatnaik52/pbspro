version: "#{build}"
image: Windows Server 2019
services: 
- docker
before_build:
# - ps: Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'
# - ps: Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
# - ps: Start-Service sshd
# - ps: Set-Service -Name sshd -StartupType 'Automatic'
# - ps: Get-NetFirewallRule -Name *ssh*
# - ps: Install-Module VSSetup -Scope CurrentUser
# - ps: Get-VSSetupInstance
# - cmd: call .appveyor\appveyor_helper.bat %CONFIGURATION%
# - cmd: call "%vsappiddir%..\tools\vsdevcmd.bat"

init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
build_script:
# - cmd: call "%VS100COMNTOOLS%vsvars32.bat"
# - cmd: vcbuild win_configure\pbs_windows_VS2008.sln "%CONFIGURATION%|Win32"
#after_build:
#- cmd: call .appveyor\gentaller.bat %COFIGURATION%
# before_test: 
# - cmd: net user %USERNAME% pbS@123
# - ps: copy c:\projects\win_build\msi\PBMSI PBSPro.msi
# - cmd: msiexec /quiet /qn /norestart /i c:\projects\pbspro\PBSPro.msi
# - cmd: refreshenv
# - cmd: C:A~2\PBS\exec\pyithon\python.exe C:\PROGRA~2\PBS\exec\etc\win_postinstall.py -u %USERNAME% -p pbS@123 -t "execution" -s "hello"
- ps: Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
- ps: docker info
- ps: docker-switch-linux
- ps: docker pull centos:7
- ps: docker images
- ps: docker run -it -d -h testdev.pbspro.org --name testdev -w /tmp/pbspro --privileged centos:7 /bin/bash
- ps: docker ps -a
- ps: docker cp C:/projects/pbspro/. testdev:/tmp/pbspro/
#- ps: docker exec -it --privileged testdev /bin/bash ./.travis/centos_7.sh
on_finish:
- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


