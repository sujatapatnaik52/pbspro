#!/bin/sh
#
#
# 
#
# Copyright (C) 1994-2018 Altair Engineering, Inc.
# For more information, contact Altair at www.altair.com.
#
# This file is part of the PBS Professional ("PBS Pro") software.
#
# Open Source License Information:
#
# PBS Pro is free software. You can redistribute it and/or modify it under the
# terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Commercial License Information:
#
# For a copy of the commercial license terms and conditions,
# go to: (http://www.pbspro.com/UserArea/agreement.html)
# or contact the Altair Legal Department.
#
# Altair’s dual-license business model allows companies, individuals, and
# organizations to create proprietary derivative works of PBS Pro and
# distribute them - whether embedded or bundled with other software -
# under a commercial license agreement.
#
# Use of Altair’s trademarks, including but not limited to "PBS™",
# "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
# trademark licensing policies.
#

# This is a simple script that generates a machine type name
# based on the output of uname.  The generated name is in the
# style of old PBS machine names and thus a hand generated
# mapping needs to take place. If you port PBS to new architectures
# you should modify the lookup table. A better way would have been
# to name the machines in a more "standard" way but it would require
# a considerable amount of effort to find all the dependencies in
# the code and documentation.    lonhyn@nas.nasa.gov
#

OS=`uname -s | tr '[A-Z]' '[a-z]'`
REL=`uname -r`
VER=`uname -v 2> /dev/null`

test "$VER" = unicosmk && OS="$VER"

bad_rel=n

verbose=""; export verbose

test "$1" = "-v" && verbose=yes

case "$OS" in 

  darwin*) mach=darwin ;;

  linux*) mach=linux ;;

  *)   test -n "$verbose" && \
           echo $0: the operating system \"$OS\" is unknown >&2 ;
       echo unknown ;
       exit 1 ;;

esac


if test "$bad_rel" = y; then
  test -n "$verbose" && \
      echo $0: for operating system \"$OS\", release \"$REL\" is unknown >&2
  echo unknown
  exit 2
fi

echo $mach
exit 0
